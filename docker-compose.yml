version: '3.4'

services:
  kafka:
    networks:
      - network_ben
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      sqlserver1:
        condition: service_healthy

  producer:
    networks:
      - network_ben
    environment:
      KAFKA_HOST: "kafka:9092"
    depends_on:
      - kafka
    build:
      context: ./ben_second_challenge
      dockerfile: Dockerfile

  sqlserver1:
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      - network_ben
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", -Slocalhost, "-U${DB1_MSSQL_USER}", "-P${DB1_MSSQL_SA_PASSWORD}", "-Q", "SELECT 1"]
      interval: 5s
      retries: 20
    environment:
      ACCEPT_EULA: ${DB1_ACCEPT_EULA}
      MSSQL_SA_PASSWORD: ${DB1_MSSQL_SA_PASSWORD}
      MSSQL_PID: ${DB1_MSSQL_PID}
    ports:
      - "1433:1433"
    volumes:
      - ./db/db1:/var/opt/mssql/data

  consumer:
    networks:
      - network_ben
    depends_on:
      - producer
    environment:
      KAFKA_HOST: "kafka:9092"
      DB_SERVER: ${DOCKER_DB1_MSSQL_HOST}
      DB_USER: ${DB1_MSSQL_USER}
      DB_PASS: ${DB1_MSSQL_SA_PASSWORD}
    build:
      context: ./consumer
      dockerfile: Dockerfile
    command: >
      sh -c "dotnet ef database update && dotnet run"

networks:
  network_ben:
    driver: bridge